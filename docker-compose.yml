services:
    env_django:
        extra_hosts:
            - "host.docker.internal:host-gateway"
        image: arango_taxii_server
        build: .
        pull_policy: never
        volumes:
            - .:/usr/src/app
        env_file:
            - ./.env

    django:
        extends: env_django
        image: arango_taxii_server
        container_name: django
        command: >
                bash -c "python manage.py makemigrations &&
                            python manage.py migrate && 
                            gunicorn arango_taxii_server.wsgi:application --bind 0.0.0.0:8009 --reload
                        "
        volumes:
            - .:/usr/src/app/
        ports:
            - 8009:8009
        environment:
            - DEBUG=
            - DJANGO_ALLOWED_HOSTS=*
            - CELERY_BROKER_URL=redis://redis:6379/0
        env_file:
            - ./.env
        depends_on:
            pgdb:
                condition: service_healthy
            redis:
                condition: service_started
    celery:
        extends: env_django
        image: arango_taxii_server
        command: >
                bash -c "
                  celery -A arango_taxii_server worker -l INFO
                  "
        environment:
            - DEBUG=1
            - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
            - CELERY_BROKER_URL=redis://redis:6379/0
            - result_backend=redis://redis:6379/1
        depends_on:
            - django
            - redis
    pgdb:
        image: postgres
        container_name: pgdb
        env_file:
          - ./.env

        volumes:
            - pgdata:/var/lib/postgresql/data/
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 10s
            retries: 5
            start_period: 10s
            timeout: 10s
        ports:
            - 5432:5432
    redis:
        image: "redis:alpine"
volumes:
    pgdata:

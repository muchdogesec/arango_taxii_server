# Environment file info

If you're running in production, you should set these securely.

However, if you just want to experiment, set the following values

## Django Settings

These are all Django settings, defined in `arango_taxii_server/settings.py`

* `DJANGO_SECRET`: `insecure_django_secret`
* `DJANGO_DEBUG`: `True`
* `DJANGO_ALLOWED_HOSTS`: BLANK
* `DJANGO_CORS_ALLOW_ALL_ORIGINS`: `True`
* `DJANGO_CORS_ALLOWED_ORIGINS`: LEAVE EMPTY

## Postgres Settings

These are all Django settings, defined in `arango_taxii_server/settings.py`

* `POSTGRES_HOST`: `host.docker.internal`
* `POSTGRES_PORT`: BLANK
* `POSTGRES_DB`: `postgres`
* `POSTGRES_USER`: `postgres`
* `POSTGRES_PASSWORD`: `postgres`

## Celery settings

* `CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP`: `1`

## ArangoDB settings

Note, this code will not install an ArangoDB instance.

If you're new to ArangoDB, [you can install the community edition quickly by following the instructions here](https://arangodb.com/community-server/).

Arango TAXII Server uses [stix2arango](https://github.com/muchdogesec/stix2arango) as a middleware component when creating objects (Add Object endpoint).

It is STRONGLY recommend you seed your ArangoDB database using [stix2arango](https://github.com/muchdogesec/stix2arango). If not, that is OK, but it is imperative you create Databases and Collection as follows;

* All databases should be suffixed with `_database`, e.g (`my_taxii_database`)
* All edge collections should be suffixed with `_edge_collection` (e.g. `my_taxii_edge_collection`)
* All vertex collections should be suffixed with `_vertex_collection` (e.g. `my_taxii_vertex_collection`)

Arango TAXII Server expects 2 collections with the same name, one with the edge suffix and one with the vertex suffix (e.g. `my_taxii_edge_collection` and `my_taxii_vertex_collection`) to store objects correctly. For any request these ArangoDB Collections exposed to the user as a single TAXII collection called `my_taxii`, but under the hood both Collections are used.edge+vertex collection form a sig

In the [stix2arango utilities](https://github.com/muchdogesec/stix2arango/tree/main/utilities) you will find some quick start guides that will import some common knowledgebase data into Arango which is very useful in demonstrating how your Databases and Collections should be structured to work with Arango TAXII Server.

* `ARANGODB_HOST_URL`: `http://host.docker.internal:8529/`
	* This is the Arango instance that will be used. A user must authenticate using their ArangoDB username/password in each request to the API.

## TAXII API settings

These define the API schema generation

* `APIROOT_BASE_URL`: None # should only be set if server is behind a reverse proxy that rewrites url.
* `SERVER_TITLE`: `'Arango TAXII Server'`
* `SERVER_DESCRIPTION`: `'https://github.com/muchdogesec/arango_taxii_server/'`
* `SERVER_MAX_CONTENT_LENGTH`: `10485760`
* `SERVER_EMAIL`: `'noreply@dogesec.com'`
* `SERVER_SUPPORT`: `'https://community.dogesec.com/'`

These define API pagination behaviour

* `MAX_PAGE_SIZE`: `50`
	* This is the maximum number of results the API will ever return before pagination
* `DEFAULT_PAGE_SIZE`: `50`
	* The default page size of result returned by the API

## TESTS -- ONLY NEEDED IF RUNNING TEST SUITE

See tests/README.md